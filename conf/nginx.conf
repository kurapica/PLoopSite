user root;
worker_processes  2;

pid logs/nginx.pid;

events {
    worker_connections  1024;
}

stream {
    lua_package_path "${prefix}?.lua;${prefix}?/init.lua;/usr/local/openresty/lualib/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua";

    lua_shared_dict ploop_site_stream_lock 100k;
    lua_shared_dict ploop_site_stream_data 10m;

    error_log   ./logs/error.log debug;

    lua_socket_log_errors off;

    # Load the mqtt server
    init_by_lua_file ./app/mqtt.lua;

    # The MQTT Server For All Devices
    server {
        listen 1883;

        content_by_lua 'PLoopSite.MQTTClient():Process()';
    }
}

http {
    include mime.types;

    lua_package_path "${prefix}?.lua;${prefix}?/init.lua;/usr/local/openresty/lualib/?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua";

    lua_shared_dict ploop_site_api_lock 100k;
    lua_shared_dict ploop_site_api_data 10m;

    sendfile        on;
    keepalive_timeout  65;

    # Variable for access log filename date
    map $time_iso8601 $logdate {
        '~^(?<ymd>\d{4}-\d{2}-\d{2})'   $ymd;
        default                         'nodate';
    }

    log_format  main    '$remote_addr - $remote_user [$time_local] "$request" '
                      '$request_time $status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  ./logs/access_${logdate}.log    main;
    error_log   ./logs/error.log info;

    # Load the app
    init_by_lua_file ./app/http.lua;
    client_max_body_size 30m;
    client_body_buffer_size 2m;

    # The Http API Server
    server{
        listen       80;
        server_name  localhost;

        index /;

        location ~* \.(md|lua)$ {
            deny all;
        }

        location ^~ /static/ {
            root ./html;
            access_log off;
        }

        location ^~ /avatar/ {
            root ./html;
            access_log off;
            log_not_found off;
            error_page 404  /static/img/avatar.jpg;
        }

        location / {
            root html;

            resolver 8.8.8.8;

            # MIME type determined by default_type:
            default_type 'text/html';

            content_by_lua ' PLoopSite.HttpContext():Process() ';
        }
    }

    # The WebSocket Server for MQTT
    server{
        listen       9001;
        server_name  localhost;

        location / {
            content_by_lua 'PLoopSite.WebSocketClient():Process()';
        }
    }
}
